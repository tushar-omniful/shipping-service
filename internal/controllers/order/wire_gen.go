// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package order_controller

import (
	"context"
	"github.com/omniful/go_commons/db/sql/postgres"
	"github.com/omniful/go_commons/redis"
	"github.com/omniful/shipping-service/internal/repositories/city_mapping"
	"github.com/omniful/shipping-service/internal/repositories/hub_mapping"
	"github.com/omniful/shipping-service/internal/repositories/order"
	"github.com/omniful/shipping-service/internal/repositories/order_partner"
	"github.com/omniful/shipping-service/internal/repositories/partner_shipping_method"
	"github.com/omniful/shipping-service/internal/repositories/shipping_partner"
	"github.com/omniful/shipping-service/internal/repositories/tenant_city_mapping"
	"github.com/omniful/shipping-service/internal/services/orders"
	"github.com/omniful/shipping-service/internal/services/shipment"
	"github.com/omniful/shipping-service/pkg/lock"
)

// Injectors from wire.go:

func Wire(ctx context.Context, db *postgres.DbCluster, redisClient *redis.Client) (*Controller, error) {
	repository := order_repo.NewRepository(db)
	order_partner_repoRepository := order_partner_repo.NewRepository(db)
	partner_shipping_method_repoRepository := partner_shipping_method_repo.NewRepository(db)
	city_mapping_repoRepository := city_mapping_repo.NewRepository(db)
	shipping_partner_repoRepository := shipping_partner_repo.NewRepository(db)
	tenant_city_mapping_repoRepository := tenant_city_mapping_repo.NewRepository(db)
	hub_mapping_repoRepository := hub_mapping_repo.NewRepository(db)
	redisLock := lock.NewRedisLock(redisClient)
	service := shipment.NewService(repository, order_partner_repoRepository, partner_shipping_method_repoRepository, shipping_partner_repoRepository, redisLock)
	orderService := order_service.NewService(repository, order_partner_repoRepository, partner_shipping_method_repoRepository, city_mapping_repoRepository, shipping_partner_repoRepository, tenant_city_mapping_repoRepository, hub_mapping_repoRepository, service, redisLock)
	controller := NewController(orderService)
	return controller, nil
}
